/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.BluetoothDevice;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-10-30T16:30:18.546Z")

@Api(value = "bluetoothManager", description = "the bluetoothManager API")
public interface BluetoothManagerApi {

    @ApiOperation(value = "Returns bluetooth devices", notes = "", response = BluetoothDevice.class, tags={ "bluetooth manager", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BluetoothDevice.class) })
    
    @RequestMapping(value = "/bluetoothManager/devices",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BluetoothDevice> getDevices();


    @ApiOperation(value = "Starts discovery", notes = "", response = Void.class, tags={ "bluetooth manager", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Void.class),
        @ApiResponse(code = 404, message = "discovery could not be started", response = Void.class) })
    
    @RequestMapping(value = "/bluetoothManager/startDiscovery",
        method = RequestMethod.GET)
    ResponseEntity<Void> startDiscovery();


    @ApiOperation(value = "Stops discovery", notes = "", response = Void.class, tags={ "bluetooth manager", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Void.class),
        @ApiResponse(code = 404, message = "discovery could not be stopped", response = Void.class) })
    
    @RequestMapping(value = "/bluetoothManager/stopDiscovery",
        method = RequestMethod.GET)
    ResponseEntity<Void> stopDiscovery();

}
