/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.BluetoothGattCharacteristic;
import io.swagger.model.BluetoothGattService;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-10-30T16:30:18.546Z")

@Api(value = "bluetoothService", description = "the bluetoothService API")
public interface BluetoothServiceApi {

    @ApiOperation(value = "Get bluetooth service by uuid", notes = "", response = BluetoothGattService.class, tags={ "bluetooth service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BluetoothGattService.class),
        @ApiResponse(code = 400, message = "invalid uuid supplied", response = Void.class),
        @ApiResponse(code = 404, message = "bluetooth service not found", response = Void.class) })
    
    @RequestMapping(value = "/bluetoothService/{uuid}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BluetoothGattService> getBluetoothGattService(@ApiParam(value = "The uuid of the bluetooth device. ",required=true ) @PathVariable("uuid") String uuid);


    @ApiOperation(value = "Returns bluetooth service's characteristics", notes = "", response = BluetoothGattCharacteristic.class, tags={ "bluetooth characteristic", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = BluetoothGattCharacteristic.class),
        @ApiResponse(code = 400, message = "invalid uuid supplied", response = Void.class),
        @ApiResponse(code = 404, message = "bluetooth service not found", response = Void.class) })
    
    @RequestMapping(value = "/bluetoothService/{uuid}/characteristics",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BluetoothGattCharacteristic> getCharacteristics(@ApiParam(value = "The uuid of the bluetooth service. ",required=true ) @PathVariable("uuid") String uuid);

}
